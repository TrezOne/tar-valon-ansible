name: Validate DAGs

on:
  workflow_dispatch:
  push:
    paths:
      - 'app-configs/rinoa/dagu/dags/**'
      - '**/dag-config-check.yml'
    branches-ignore:
      - main

env:
  DAGS_PATH: "app-configs/rinoa/dagu/dags"
  VAULT_ADDR: ${{ secrets.VAULT_ADDR }}
  VAULT_TOKEN: ${{ secrets.VAULT_GITEA_TOKEN }}

jobs:
  validate-dags:
    name: DAGU DAG(s) Validation
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4

      - name: Gotify Notification
        uses: eikendev/gotify-action@master
        with:
          gotify_api_base: '${{ secrets.GOTIFY_URL }}'
          gotify_app_token: '${{ secrets.RUNNER_GOTIFY_TOKEN }}'
          notification_title: 'GITEA: Dagu Validation'
          notification_message: 'Setting up Ansible and Vault... üèóÔ∏è'

      - name: Install Ansible
        uses: alex-oleshkevich/setup-ansible@v1.0.1
        with:
          version: "11.4.0"

      - name: Cache Ansible Galaxy Collections
        uses: actions/cache@9b0c1fce7a93df8e3bb8926b0d6e9d89e92f20a7 # v3.0.11
        with:
          path: collections
          key: ${{ runner.os }}-ansible-${{ hashFiles('./collections/requirements.yml') }}
          restore-keys: |
            ${{ runner.os }}-ansible-

      - name: Set up Vault CLI
        uses: eLco/setup-vault@v1
        with:
          vault_version: 1.18.0

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements*.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install hvac (Vault Python SDK)
        run: pip install hvac

      - name: Gotify Notification
        uses: eikendev/gotify-action@master
        with:
          gotify_api_base: '${{ secrets.GOTIFY_URL }}'
          gotify_app_token: '${{ secrets.RUNNER_GOTIFY_TOKEN }}'
          notification_title: 'GITEA: Dagu Validation'
          notification_message: 'Ansible and Vault setups completed, starting Dagu validation... üî¨'

      - name: Install dagu
        run: |
          curl -L https://raw.githubusercontent.com/dagu-org/dagu/main/scripts/installer.sh | bash

      - name: Render DAG Jinja templates
        uses: dawidd6/action-ansible-playbook@v2
        with:
          directory: .
          vault_password: ${{ secrets.ANSIBLE_VAULT_PASSWORD }}
          requirements: collections/requirements.yml
          playbook: rinoa-render-dags.yml

      - name: Validate DAGs
        run: |
          for dag in $(find ${DAGS_PATH} -type f -name "*.yaml" -a ! -name "*example*"); do
            echo -e "\n\n===========Validating ${dag}===========\n"
            dagu dry "${dag}"
          done
          echo "exit_code=$status" >> $GITHUB_OUTPUT

      - name: Gotify Notification
        if: steps.validate-dags.outputs.exit_code == '0'
        uses: eikendev/gotify-action@master
        with:
          gotify_api_base: '${{ secrets.GOTIFY_URL }}'
          gotify_app_token: '${{ secrets.RUNNER_GOTIFY_TOKEN }}'
          notification_title: 'GITEA: Dagu Validation'
          notification_message: 'Dagu DAG validation passed! üèÅ'

      - name: Gotify Notification
        if: steps.validate-dags.outputs.exit_code != '0'
        uses: eikendev/gotify-action@master
        with:
          gotify_api_base: '${{ secrets.GOTIFY_URL }}'
          gotify_app_token: '${{ secrets.RUNNER_GOTIFY_TOKEN }}'
          notification_title: 'GITEA: Dagu Validation'
          notification_message: 'Dagu DAG validation failed! üö´'

      - name: Trigger Tar Valon Ansible Deploy
        run: |
          BRANCH="${GITHUB_REF_NAME}"
          curl -X POST \
            -H "Authorization: token ${{ secrets.BOT_GITEA_TOKEN }}" \
            -H "Content-Type: application/json" \
            "https://git.trez.wtf/api/v1/repos/Trez/tar-valon-ansible/actions/workflows/gitea_tar-valon_ansible_deploy.yml/dispatches" \
            -d "{\"ref\":\"${BRANCH}\"}"