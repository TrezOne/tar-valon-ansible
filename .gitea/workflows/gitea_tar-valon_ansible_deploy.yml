name: Gitea Branch PR & Ansible Deployment

on:
  workflow_dispatch:
  push:
    branches-ignore:
      - 'main'
    paths:
      - 'app-configs/**'
      - 'inventory/hosts.yml'
      - 'host_vars/**.yml'
      - '**/gitea_tar-valon_ansible_deploy.yml'

env:
  VAULT_ADDR: ${{ secrets.VAULT_ADDR }}
  VAULT_TOKEN: ${{ secrets.VAULT_GITEA_TOKEN }}

jobs:
  check-and-create-pr:
    if: github.ref != 'refs/heads/main'
    name: Check and Create PR
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v5
        with:
          fetch-depth: 1

      - name: Install tea CLI
        uses: supplypike/setup-bin@v4
        with:
          uri: 'https://gitea.com/gitea/tea/releases/download/v0.9.2/tea-0.9.2-linux-amd64'
          name: 'tea'
          version: '0.9.2'

      - name: Gotify Notification
        uses: eikendev/gotify-action@master
        with:
          gotify_api_base: '${{ secrets.GOTIFY_URL }}'
          gotify_app_token: '${{ secrets.RUNNER_GOTIFY_TOKEN }}'
          notification_title: 'GITEA: PR Check'
          notification_message: 'Checking for existing PR... 🔍'

      - name: Check if open PR exists
        id: check-opened-pr-step
        continue-on-error: true
        run: |
          tea login add --name gitea-rinoa --url "${{ secrets.TV_GITEA_URL }}" --user gitea-sonarqube-bot --password "${{ secrets.BOT_GITEA_PASSWORD }}" --token ${{ secrets.BOT_GITEA_TOKEN }}
          tea pr list --repo ${{ github.repository }} --state all
          tea pr list --repo ${{ github.repository }} --state open --fields index,title,head | egrep '\[ANSIBLE\].*${{ github.ref_name }}'
          echo "Checking for PR..."
          pr_exists=$(tea pr list --repo ${{ github.repository }} --state open --fields index,title,head | egrep '\[ANSIBLE\].*${{ github.ref_name }}' | tail -1 | wc -l)
          echo "End of check"
          echo "exists=$pr_exists" >> $GITHUB_OUTPUT

      - name: Create PR
        if: ${{ steps.check-opened-pr-step.outputs.exists == '0' }}
        run: |
          tea login default gitea-rinoa
          pr_index_old=$(tea pr ls --repo ${{ github.repository }} --state all --fields index,title,head --output csv | sed -e 's|"||g' | egrep '^[0-9]' | head -1 | awk -F"," '{print $1}')
          pr_index_new=$(expr ${pr_index_old} + 1)
          tea pr c -r ${{ github.repository }} -t "[ANSIBLE] Automated PR for ${{ github.ref_name }} - #${pr_index_new}" -d "Automatically created PR for branch: ${{ github.ref_name }}" -a ${{ github.actor }} -L "Ansible Configs.j2"

      - name: Gotify Notification
        uses: eikendev/gotify-action@master
        with:
          gotify_api_base: '${{ secrets.GOTIFY_URL }}'
          gotify_app_token: '${{ secrets.RUNNER_GOTIFY_TOKEN }}'
          notification_title: 'GITEA: PR Check'
          notification_message: 'PR Created 🎟️'

  ansible-dry-run:
    name: Ansible Dry Run
    needs: [check-and-create-pr]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        host: [rinoa, rikku, benedikta]
    env:
      VAULT_ADDR: ${{ secrets.VAULT_ADDR }}
      VAULT_TOKEN: ${{ secrets.VAULT_GITEA_TOKEN }}
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Cache Ansible Galaxy Collections
        uses: actions/cache@v3
        with:
          path: ansible/collections
          key: ${{ runner.os }}-ansible-${{ hashFiles('./ansible/collections/requirements.yml') }}
          restore-keys: |
            ${{ runner.os }}-ansible-

      - name: Install Ansible
        uses: alex-oleshkevich/setup-ansible@v1.0.1
        with:
          version: "11.4.0"

      - name: Install Vault & hvac
        run: |
          sudo apt-get update && sudo apt-get install -y unzip
          curl -fsSL https://releases.hashicorp.com/vault/1.18.0/vault_1.18.0_linux_amd64.zip -o vault.zip
          unzip vault.zip
          sudo mv vault /usr/local/bin/
          pip install hvac

      - name: Gotify Notification
        uses: eikendev/gotify-action@master
        with:
          gotify_api_base: '${{ secrets.GOTIFY_URL }}'
          gotify_app_token: '${{ secrets.RUNNER_GOTIFY_TOKEN }}'
          notification_title: 'GITEA: Ansible Dry Run'
          notification_message: 'Starting dry run for ${{ matrix.host }}...'

      - name: Run Ansible Dry Run
        uses: dawidd6/action-ansible-playbook@v3
        with:
          directory: ansible/
          playbook: homelab_config_deploy.yml
          key: ${{ secrets.ANSIBLE_PRIVATE_KEY }}
          requirements: collections/requirements.yml
          options: |
            --inventory inventory/hosts.yml
            --limit ${{ matrix.host }}
            --check

      - name: Gotify Notification
        uses: eikendev/gotify-action@master
        with:
          gotify_api_base: '${{ secrets.GOTIFY_URL }}'
          gotify_app_token: '${{ secrets.RUNNER_GOTIFY_TOKEN }}'
          notification_title: 'GITEA: Ansible Dry Run'
          notification_message: 'Dry run for ${{ matrix.host }} completed.'

  pr-merge:
    name: PR Merge
    needs: [ansible-dry-run]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Install tea
        uses: supplypike/setup-bin@v4
        with:
          uri: 'https://gitea.com/gitea/tea/releases/download/v0.9.2/tea-0.9.2-linux-amd64'
          name: 'tea'
          version: '0.9.2'

      - name: PR Merge
        id: pr_merge
        run: |
          tea login add --name gitea-rinoa --url ${{ secrets.TV_GITEA_URL }} --user gitea-sonarqube-bot --password "${{ secrets.BOT_GITEA_PASSWORD }}" --token ${{ secrets.BOT_GITEA_TOKEN }}
          tea login default gitea-rinoa
          pr_index=$(tea pr ls --repo ${{ github.repository }} --state open --fields index,title,head,state --output csv | egrep ${{ github.ref_name }} | awk -F"," '{print $1}' | sed -e 's|"||g')
          tea pr m --repo ${{ github.repository }} --title "Auto Merge of PR ${pr_index} - ${{ github.ref_name }}" --message "Merged by ${{ github.actor }}" ${pr_index}
          echo "pr_index=${pr_index}" >> $GITHUB_OUTPUT

      - name: Gotify Notification
        uses: eikendev/gotify-action@master
        with:
          gotify_api_base: '${{ secrets.GOTIFY_URL }}'
          gotify_app_token: '${{ secrets.RUNNER_GOTIFY_TOKEN }}'
          notification_title: 'GITEA: PR Merge Successful'
          notification_message: 'PR #${{ steps.pr_merge.outputs.pr_index }} merged.'

  ansible-config-deploy:
    name: Ansible Config Deployment
    needs: [pr-merge]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        host: [rinoa, rikku, benedikta]
    env:
      VAULT_ADDR: ${{ secrets.VAULT_ADDR }}
      VAULT_TOKEN: ${{ secrets.VAULT_GITEA_TOKEN }}
    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          ref: main

      - name: Install Ansible
        uses: alex-oleshkevich/setup-ansible@v1.0.1
        with:
          version: "11.4.0"

      - name: Install Vault & hvac
        run: |
          sudo apt-get update && sudo apt-get install -y unzip
          curl -fsSL https://releases.hashicorp.com/vault/1.18.0/vault_1.18.0_linux_amd64.zip -o vault.zip
          unzip vault.zip
          sudo mv vault /usr/local/bin/
          pip install hvac

      - name: Gotify Notification
        uses: eikendev/gotify-action@master
        with:
          gotify_api_base: '${{ secrets.GOTIFY_URL }}'
          gotify_app_token: '${{ secrets.RUNNER_GOTIFY_TOKEN }}'
          notification_title: 'GITEA: Ansible Config Deployment'
          notification_message: 'Deploying configs to ${{ matrix.host }}...'

      - name: Run Ansible Config Deployment
        uses: dawidd6/action-ansible-playbook@v3
        with:
          directory: ansible/
          playbook: homelab_config_deploy.yml
          key: ${{ secrets.ANSIBLE_PRIVATE_KEY }}
          requirements: collections/requirements.yml
          options: |
            --inventory inventory/hosts.yml
            --limit ${{ matrix.host }}

      - name: Gotify Notification
        uses: eikendev/gotify-action@master
        with:
          gotify_api_base: '${{ secrets.GOTIFY_URL }}'
          gotify_app_token: '${{ secrets.RUNNER_GOTIFY_TOKEN }}'
          notification_title: 'GITEA: Deployment Completed'
          notification_message: 'Deployment to ${{ matrix.host }} completed successfully.'
