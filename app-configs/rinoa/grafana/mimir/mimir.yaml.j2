{% set vault_addr = 'https://vault.trez.wtf' %}
{% set secrets_path = 'rinoa-docker/env' %}

multitenancy_enabled: false
no_auth_tenant: rinoa_mimir
# target: query-frontend
# api:
#   prometheus_http_prefix: '/prometheus'
server:
  http_listen_port: 9009
# frontend:
#   split_queries_by_interval: 24h
#   align_queries_with_step: true
  # cache_results: true
  # results_cache:
  #   backend: "memcached"
  #   memcached:
  #     addresses: "memcached-mimir:11211"
#   downstream_url: http://grafana-agent:12345

common:
  storage:
    backend: s3
    s3:
      endpoint: minio:9000
      access_key_id: "Q8KAihuXtGgmretKNh7C"
      secret_access_key: "hOlRODtnvFlNlL26Bj3GizZG6Ys3rlpG8p6Vo3NX"
      bucket_name: "mimir"
      insecure: true

blocks_storage:
  storage_prefix: rinoa
  tsdb:
    dir: /tmp/mimir/tsdb

memberlist:
  tls_enabled: false

compactor:
  # Directory to temporarily store blocks underdoing compaction.
  data_dir: /tmp/mimir/compactor
  # The sharding ring type used to share the hashed ring for the compactor.
  sharding_ring:
    # Use memberlist backend store (the default).
    kvstore:
      store: memberlist

# The distributor receives incoming metrics data for the system.
distributor:
  # The ring to share hash ring data across instances.
  ring:
    # The address advertised in the ring. Localhost.
    instance_addr: 127.0.0.1
    # Use memberlist backend store (the default).
    kvstore:
      store: memberlist

# The ingester receives data from the distributor and processes it into indices and blocks.
ingester:
  # The ring to share hash ring data across instances.
  ring:
    # The address advertised in the ring. Localhost.
    instance_addr: 127.0.0.1
    # Use memberlist backend store (the default).
    kvstore:
      store: memberlist
    # Only run one instance of the ingesters.
    # Note: It is highly recommended to run more than one ingester in production, the default is an RF of 3.
    replication_factor: 1

# The store gateway block configures gateway storage.
store_gateway:
  # Configuration for the hash ring.
  sharding_ring:
    # Only run a single instance. In production setups, the replication factor must
    # be set on the querier and ruler as well.
    replication_factor: 1
